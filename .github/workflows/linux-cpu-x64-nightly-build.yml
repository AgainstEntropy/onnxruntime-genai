name: "Linux CPU x64 Nightly Build"

# Run at 5:00 AM UTC every day
# 9:00 PM PST

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  ORT_NIGHTLY_REST_API: "https://feeds.dev.azure.com/aiinfra/PublicPackages/_apis/packaging/Feeds/ORT-Nightly/packages?packageNameQuery=Microsoft.ML.OnnxRuntime.Gpu.Linux&api-version=6.0-preview.1"
  ORT_PACKAGE_NAME: Microsoft.ML.OnnxRuntime.Gpu.Linux
  ORT_NIGHTLY_SOURCE: "https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ORT-Nightly/nuget/v3/index.json"
  DOTNET_INSTALL_DIR: "${{ github.workspace }}/dotnet"
jobs:
  job:
    runs-on: [ "self-hosted", "1ES.Pool=onnxruntime-genai-Ubuntu2204-AMD-CPU" ]
    steps:
      - name: Checkout OnnxRuntime GenAI repo
        uses: actions/checkout@v2

      - name: Download OnnxRuntime
        run: |
          ORT_NIGHTLY_VERSION=$(curl -s "${{ env.ORT_NIGHTLY_REST_API }}" | jq -r '.value[0].versions[0].normalizedVersion')
          echo "$ORT_NIGHTLY_VERSION" 
          echo "ORT_NIGHTLY_VERSION=$ORT_NIGHTLY_VERSION" >> $GITHUB_ENV
      
      - name: Download OnnxRuntime Nightly
        run: |
          dotnet new console
          dotnet add package ${{ env.ORT_PACKAGE_NAME }} --version ${{ env.ORT_NIGHTLY_VERSION }} --source ${{ env.ORT_NIGHTLY_SOURCE }} --package-directory .
          dotnet build
        continue-on-error: true

      - name: Extract OnnxRuntime library and header files
        run: |
          set -e -x
          mkdir -p ort/lib
          mv microsoft.ml.onnxruntime.gpu.linux/${{ env.ORT_NIGHTLY_VERSION }}/buildTransitive/native/include ort/
          mv microsoft.ml.onnxruntime.gpu.linux/${{ env.ORT_NIGHTLY_VERSION }}/runtimes/linux-x64/native/* ort/lib/
          ort_version=$(echo ${{ env.ORT_NIGHTLY_VERSION }} | cut -d- -f1-1)
          cp ort/lib/libonnxruntime.so ort/lib/libonnxruntime.so.$ort_version

      - name: Git Submodule Update
        run: |
          git submodule update --init --recursive
          
      - name: Build with CMake and clang
        run: |
          set -e -x
          rm -rf build
          cmake --preset linux_gcc_cpu_release
          cmake --build --preset linux_gcc_cpu_release

      - name: Install the python wheel and test dependencies
        run: |
          python3 -m pip install build/cpu/wheel/onnxruntime_genai*.whl
          python3 -m pip install -r test/python/requirements-nightly-cpu.txt --user

      - name: Get HuggingFace Token
        run: |
          az login --identity --username 63b63039-6328-442f-954b-5a64d124e5b4
          HF_TOKEN=$(az keyvault secret show --vault-name anubissvcsecret --name ANUBIS-HUGGINGFACE-TOKEN --query value)
          echo "::add-mask::$HF_TOKEN"
          echo "HF_TOKEN=$HF_TOKEN" >> $GITHUB_ENV

      - name: Run the python tests
        run: |
          python3 test/python/test_onnxruntime_genai.py --cwd test/python --test_models test/test_models --e2e

      - name: Verify Build Artifacts
        if: always()
        run: |
          ls -l ${{ github.workspace }}/build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: onnxruntime-genai-linux-cpu-x64
          path: ${{ github.workspace }}/build/**/*.a
