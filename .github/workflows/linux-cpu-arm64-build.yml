name: "Linux CPU ARM64 Build"
on: [ workflow_dispatch, pull_request ]
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  ort_dir: "onnxruntime-linux-aarch64-1.16.3"
  ort_zip: "onnxruntime-linux-aarch64-1.16.3.tgz"
  ort_url: "https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-linux-aarch64-1.16.3.tgz"
  docker_image: "onnxruntimecpubuild"
jobs:
  job:
    runs-on: [ "self-hosted", "1ES.Pool=onnxruntime-genai-Ubuntu2004-ARM-CPU" ]
    steps:
      - name: Checkout OnnxRuntime GenAI repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download OnnxRuntime
        run: |
          echo "Downloading ${{ env.ort_url }}"
          curl -L -o ${{ env.ort_zip }} ${{ env.ort_url }} 
          echo "Unzipping ${{ env.ort_zip }}"
          tar -xzf ${{ env.ort_zip }}
          rm ${{ env.ort_zip }}
          echo "Renaming ${{ env.ort_dir }} to ort"
          mv ${{ env.ort_dir }} ort
      - name: Bootstrap VCPKG
        run: |
          echo "Bootstrap VCPKG"
          ./extern/vcpkg/bootstrap-vcpkg.sh
          vcpkg integrate install

      - name: Get Docker Image
        run: |
          set -e -x
          python3 tools/ci_build/get_docker_image.py --dockerfile tools/ci_build/github/linux/docker/inference/aarch64/default/cpu/Dockerfile \
            --context tools/ci_build/github/linux/docker/inference/aarch64/default/cpu \
            --docker-build-args "--build-arg BUILD_UID=$( id -u )" \
            --container-registry onnxruntimebuildcache \
            --repository ${{ env.docker_image }}

      - name: Print Docker Image Environment Variables
        run: |
          echo "Printing docker image environment variables"
          docker run --rm ${{ env.docker_image }} env

      - name: Check Docker ninja and ninja location
        run: |
          echo "Printing docker image environment variables"
          docker run --rm ${{ env.docker_image }} bash -c "ninja --version && which ninja && which cc && which g++ && g++ --version && gcc --version"

      - name: Docker -- Build with CMake and GCC
        run: |
          echo "Running docker image ${{ env.docker_image }}"
          docker run \
          --rm \
          --volume $GITHUB_WORKSPACE:/onnxruntime_src \
          --volume $RUNNER_TEMP:/build \
          -w /build ${{ env.docker_image }} bash -c "echo '---Boostring vcpkg---' && /onnxruntime_src/extern/vcpkg/bootstrap-vcpkg.sh && echo '---Run CMAKE---'  /usr/bin/cmake -B build -S /onnxruntime_src -G Ninja -DCMAKE_BUILD_TYPE=Release && cmake --build build --parallel 8 --config Release"

#          /onnxruntime_src/extern/vcpkg/bootstrap-vcpkg.sh &&