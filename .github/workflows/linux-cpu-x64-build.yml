on: [ workflow_dispatch, pull_request ]

env:
  ort_dir: "onnxruntime-linux-x64-1.16.3"
  ort_zip: "onnxruntime-linux-x64-1.16.3.tgz"
  ort_url: "https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-linux-x64-1.16.3.tgz"
jobs:
  job:
    runs-on: ["self-hosted", "1ES.Pool=onnxruntime-genai-Ubuntu2204-AMD-CPU"]
    steps:
      - name: Checkout OnnxRuntime GenAI repo
        uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo install clang-tidy-sarif sarif-fmt

      - name: Download OnnxRuntime
        run: |
          curl -L -o ${{ env.ort_zip }} ${{ env.ort_url }} 

      - name: Unzip OnnxRuntime
        run: |
          tar -xzf ${{ env.ort_zip }}
          rm ${{ env.ort_zip }}

      - name: Rename OnnxRuntime to ort
        run: |
          mv ${{ env.ort_dir }} ort

      - name: Git Submodule Update
        run: |
          git submodule update --init --recursive

      - name: Build with CMake
        run: |
          set -e -x
          mkdir build
          cd build
          cmake -G "Unix Makefiles" .. -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cmake --build . --config Release --parallel
          cp compile_commands.json ..
          clang-tidy src -- | tee
          results.sarif | sarif-fmt

      - name: Verify Build Artifacts
        run: |
          ls -l ${{ github.workspace }}/build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: onnxruntime-genai-linux-cpu-x64
          path: ${{ github.workspace }}/build/**/*.so
