name: "Linux CPU x64 Build"
on: [ workflow_dispatch, pull_request ]
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  ort_dir: "onnxruntime-linux-x64-1.16.3"
  ort_zip: "onnxruntime-linux-x64-1.16.3.tgz"
  ort_url: "https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-linux-x64-1.16.3.tgz"
jobs:
  job:
    name: "Linux CPU x64 Build"
    runs-on: [ "self-hosted", "1ES.Pool=onnxruntime-genai-Ubuntu2204-AMD-CPU" ]
    steps:
      - name: Checkout OnnxRuntime GenAI repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Bootstrap vcpkg
        run: |
          ${{ github.workspace }}/extern/vcpkg/bootstrap-vcpkg.sh

      - name: Download OnnxRuntime
        run: |
          echo "Downloading ${{ env.ort_url }}"
          curl -L -o ${{ env.ort_zip }} ${{ env.ort_url }} 
          echo "Unzipping ${{ env.ort_zip }}"
          tar -xzf ${{ env.ort_zip }}
          rm ${{ env.ort_zip }}
          echo "Renaming ${{ env.ort_dir }} to ort"
          mv ${{ env.ort_dir }} ort

      - name: Build with CMake and GCC
        run: |
          set -e -x
          rm -rf build
          cmake --preset linux_gcc_cpu_release
          cmake --build --preset linux_gcc_cpu_release
          
      - name: Build with CMake and clang
        run: |
          set -e -x
          rm -rf build
          cmake --preset linux_clang_cpu_release
          cmake --build --preset linux_clang_cpu_release

      - name: Verify Build Artifacts
        if: always()
        run: |
          ls -l ${{ github.workspace }}/build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: onnxruntime-genai-linux-cpu-x64
          path: ${{ github.workspace }}/build/**/*.so
