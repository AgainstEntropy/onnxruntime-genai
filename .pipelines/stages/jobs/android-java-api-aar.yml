parameters:
- name: buildConfig
  displayName: Configuration to build
  type: string
  default: 'Release'

# - name: job_name_suffix
#   displayName: Job name
#   type: string
#   default: ''

- name: pool_name
  displayName: Pool name
  type: string
  default: 'onnxruntime-Ubuntu2204-AMD-CPU'

- name: packageName
  # do we need to build onnxruntime-genai and onnxruntime-genai-android?
  displayName: Package Name
  type: string
  default: 'onnxruntime-genai-android'

jobs:
- job: Android_Java_API_AAR_Packaging_${{ parameters.job_name_suffix }}
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: ${{parameters.pool_name}}

  steps:
  - checkout: self
    clean: true
    submodules: none

  - template: get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/Dockerfile.manylinux2_28_cpu
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimecpubuild

  - template: set-version-number-variables-step.yml

  - template: use-android-ndk.yml

  - task: CmdLine@2
    displayName: Build Android AAR Packages
    inputs:
      script: |
        set -e -x
        ANDROID_HOME=$(realpath $ANDROID_HOME)
        ANDROID_NDK_HOME=$(realpath $ANDROID_NDK_HOME)
        docker run --rm \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume $(Build.ArtifactStagingDirectory):/artifacts \
          --volume $ANDROID_HOME:/android_home \
          --volume TODO_ORT_HOME:/ort_home \
          --volume $NDK_HOME:/ndk_home \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          -e BUILD_CONFIG=${{parameters.buildConfig}} \
          -e GENAI_VERSION=$(TODO_GENAI_VERSION) \
          -e PACKAGE_NAME=${{parameters.packageName}} \
          onnxruntimecpubuild \
            /bin/bash /onnxruntime_src/tools/ci_build/github/android/build_aar_and_copy_artifacts.sh
      workingDirectory: $(Build.SourcesDirectory)

  # path should match what 
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.BinariesDirectory)/artifacts'
      artifactName: '${{parameters.artifactName}}'
